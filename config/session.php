<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | 預設 Session 驅動程式
    |--------------------------------------------------------------------------
    |
    | 此選項控制用於傳入請求的預設 session「驅動程式」。
    | 預設情況下，我們將使用輕量級的原生驅動程式，但
    | 您可以指定任何其他驅動程式。
    |
    | 支援: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'file'),

    /*
    |--------------------------------------------------------------------------
    | Session 生命週期
    |--------------------------------------------------------------------------
    |
    | 在這裡您可以指定您希望 session 在被視為
    | 「垃圾」並可能被清理之前保持閒置的分鐘數。如果您有
    | 碳日期，您也可以指定絕對日期時間。
    |
    */

    'lifetime' => env('SESSION_LIFETIME', 120),

    'expire_on_close' => false,

    /*
    |--------------------------------------------------------------------------
    | Session 加密
    |--------------------------------------------------------------------------
    |
    | 此選項允許您輕鬆指定所有 session 資料都應該
    | 加密，然後再存儲。所有加密都將自動執行
    | Laravel，您可以正常使用 Session。
    |
    */

    'encrypt' => false,

    /*
    |--------------------------------------------------------------------------
    | Session 檔案位置
    |--------------------------------------------------------------------------
    |
    | 使用原生 session 驅動程式時，我們需要一個位置來存儲
    | session 檔案。已為您設定預設值，但可以指定
    | 不同的位置。這僅適用於檔案 session。
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session 資料庫連線
    |--------------------------------------------------------------------------
    |
    | 使用「資料庫」或「redis」session 驅動程式時，您可以指定
    | 應該用於管理這些 session 的連線。這應該
    | 對應於您的資料庫配置選項中的連線。
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session 資料庫表
    |--------------------------------------------------------------------------
    |
    | 使用「資料庫」session 驅動程式時，您可以指定表格
    | 我們應該用來管理 session。當然，已經提供了合理的
    | 預設值；但是，您可以隨意更改。
    |
    */

    'table' => 'sessions',

    /*
    |--------------------------------------------------------------------------
    | Session 快取存儲
    |--------------------------------------------------------------------------
    |
    | 在使用其中一個基於框架快取的 session 後端時，您可以
    | 列出應該用於這些 session 的快取「存儲」。這個
    | 值必須與您的快取配置中的存儲之一匹配。
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | 某些 session 驅動程式必須手動清理其存儲位置
    | 以擺脫舊的 session 從檔案系統。這些是清理的機會。
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie 名稱
    |--------------------------------------------------------------------------
    |
    | 在這裡您可以更改用於識別 session 實例的 cookie 名稱
    | 按 ID。該名稱在此處指定用於 cookie
    | 每次建立新 session 實例時。
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie 路徑
    |--------------------------------------------------------------------------
    |
    | session cookie 路徑決定了 cookie 將被視為
    | 可用的路徑。通常，這將是您的根路徑
    | 應用程式，但您可以隨意根據需要更改此設定。
    |
    */

    'path' => '/',

    /*
    |--------------------------------------------------------------------------
    | Session Cookie 網域
    |--------------------------------------------------------------------------
    |
    | 在這裡您可以更改 session cookie 的網域。這將
    | 決定哪些網域 cookie 可用於您的
    | 應用程式。已設定合理的預設值。
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | 透過將此選項設定為 true，session cookie 將僅
    | 如果存在安全的 HTTPS 連線，則發送回伺服器。
    | 這將防止 cookie 被發送給您，當它無法
    | 安全地完成。
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | 將此值設定為 true 將防止 JavaScript 存取
    | session cookie 的值。當此值為 true 時，cookie
    | 將只能透過 HTTP 協定存取。
    |
    */

    'http_only' => true,

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | 此選項決定您的 cookie 何時發送到跨站點請求
    | 並且可以用來減輕 CSRF 攻擊。預設情況下，我們將設定
    | 此值為「lax」，因為這是一個安全的預設值。
    |
    | 支援: "lax", "strict", "none", null
    |
    */

    'same_site' => 'lax',

];