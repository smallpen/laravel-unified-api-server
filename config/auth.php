<?php

return [

    /*
    |--------------------------------------------------------------------------
    | 認證預設值
    |--------------------------------------------------------------------------
    |
    | 此選項控制應用程式的預設認證「守衛」和密碼重設選項。
    | 您可以根據需要更改這些預設值，但它們是大多數應用程式的完美起點。
    |
    */

    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    /*
    |--------------------------------------------------------------------------
    | 認證守衛
    |--------------------------------------------------------------------------
    |
    | 接下來，您可以為應用程式定義每個認證守衛。
    | 當然，已經為您定義了一個很好的預設配置，它使用會話儲存和 Eloquent 使用者提供者。
    |
    | 所有認證驅動程式都有一個使用者提供者。這定義了如何從資料庫或其他儲存機制中實際檢索使用者，
    | 這些機制被此應用程式用來持久化您的使用者資料。
    |
    | 支援的驅動程式：「session」、「token」
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        'api' => [
            'driver' => 'token',
            'provider' => 'users',
            'hash' => false,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 使用者提供者
    |--------------------------------------------------------------------------
    |
    | 所有認證驅動程式都有一個使用者提供者。這定義了如何從資料庫或其他儲存機制中實際檢索使用者，
    | 這些機制被此應用程式用來持久化您的使用者資料。
    |
    | 如果您有多個使用者表或模型，您可以配置多個來源，
    | 這些來源可以代表每個模型/表。然後可以將這些來源指派給您可能定義的任何額外認證守衛。
    |
    | 支援的驅動程式：「database」、「eloquent」
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\User::class,
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 重設密碼
    |--------------------------------------------------------------------------
    |
    | 您可以指定多個密碼重設配置，如果您有多個使用者表或模型，
    | 並且希望為每個使用者類型有單獨的密碼重設設定。
    |
    | 過期時間是令牌被視為有效的分鐘數。此安全功能使令牌保持短期，
    | 因此它們有較少的時間被猜測。您可以根據需要更改此設定。
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_reset_tokens',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 密碼確認超時
    |--------------------------------------------------------------------------
    |
    | 在這裡，您可以定義在使用者被要求重新確認其密碼之前的時間量（以秒為單位）。
    | 預設情況下，超時持續三小時。
    |
    */

    'password_timeout' => 10800,

];